# We will test ONLY the last 3 git commits for each branch.
git:
   depth: 3

# So far, we will test only the following branches
branches:
   only:
       - master
       - feat/test_CI

# We suppose that it is possible to install the whole code and test it WITHOUT sudo
sudo: true

language: cpp

# These add-ons are in common to all the Linux build and will be installed in all the cases
#addons:
#   apt:
#       sources: &common_sources
#           - george-edison55-precise-backports
#       packages: &common_deps
#           - cmake-data
#           - cmake
#           - doxygen
#           - doxygen-latex
#           - graphviz
#           - doxygen-gui
#           - doxygen-doc

matrix:
   include:

             # clang < 4 not working for some c++14 problem. Working on it
             #         - os: linux
             #           env: 
             #               - BOOST_VERSION=1.58.0
             #               - PYTHON_VERSION=3.6
             #               - CC_ENV="CC=clang-3.6 && CXX=clang++-3.6"
             #           addons:
             #               apt:
             #                   sources:
             #                       - *common_sources
             #                       - llvm-toolchain-trusty-3.6
             #                       - ubuntu-toolchain-r-test
             #                   packages:
             #                       - *common_deps
             #                       - clang-3.6
             #                       - g++-5
             #                       #- libc++-dev
             #                       #- libc++abi-dev

#====================================================================
# CLANG on OSX
#====================================================================

             - os: osx
               osx_image: xcode9.1
               env: 
                   - BOOST_VERSION=1.58.0
                   - PYTHON_VERSION=3.6
                   - CC_ENV="CC=clang-4.0 && CXX=clang++-4.0"
             #          addons:
             #              apt:
             #                  sources:
             #                      - *common_sources
             #                      - llvm-toolchain-trusty-4.0
             #                      - ubuntu-toolchain-r-test
             #                  packages:
             #                      - *common_deps
             #                      - clang-4.0
             #                      - g++-5


#====================================================================
# CLANG on Linux
#====================================================================

             #        - os: linux
             #          env: 
             #              - BOOST_VERSION=1.58.0
             #              - PYTHON_VERSION=3.6
             #              - CC_ENV="CC=clang-4.0 && CXX=clang++-4.0"
             #          addons:
             #              apt:
             #                  sources:
             #                      - *common_sources
             #                      - llvm-toolchain-trusty-4.0
             #                      - ubuntu-toolchain-r-test
             #                  packages:
             #                      - *common_deps
             #                      - clang-4.0
             #                      - g++-5
             #
             #        - os: linux
             #          env: 
             #              - BOOST_VERSION=1.58.0
             #              - PYTHON_VERSION=3.6
             #              - CC_ENV=" CC=clang-5.0 && CXX=clang++-5.0"
             #          addons:
             #              apt:
             #                  sources:
             #                      - *common_sources
             #                      - llvm-toolchain-trusty-5.0
             #                      - ubuntu-toolchain-r-test
             #                  packages:
             #                      - *common_deps
             #                      - clang-5.0
             #                      - g++-5

#====================================================================
# GCC on Linux
#====================================================================

             - os: linux
               env: 
                   - BOOST_VERSION=1.58.0
                   - PYTHON_VERSION=3.6
                   - CC_ENV="CC=gcc-5 && CXX=g++-5"
               addons:
                   apt:
                       sources:
                               #- *common_sources
                           - ubuntu-toolchain-r-test
                       packages:
                               #- *common_deps   
                           - g++-5
             #        
             #        - os: linux
             #          env: 
             #              - BOOST_VERSION=1.58.0
             #              - PYTHON_VERSION=3.6
             #              - CC_ENV="CC=gcc-6 && CXX=g++-6"
             #          addons:
             #              apt:
             #                  sources:
             #                      - *common_sources
             #                      - ubuntu-toolchain-r-test
             #                  packages:
             #                      - *common_deps   
             #                      - g++-6
             #        
             #        - os: linux
             #          env: 
             #              - BOOST_VERSION=1.58.0
             #              - PYTHON_VERSION=3.6
             #              - CC_ENV="CC=gcc-7 && CXX=g++-7"
             #          addons:
             #              apt:
             #                  sources:
             #                      - *common_sources
             #                      - ubuntu-toolchain-r-test
             #                  packages:
             #                      - *common_deps   
             #                      - g++-7


# Download and configurations of the libraries needed from librascal 
# AT THE MOMENT LINUX AND OSX BUILD BREAK DOWN SO THERE IS NO COMPATIBILITY.
before_install:
    - if [ "${TRAVIS_OS_NAME}" == "linux" ]; then sudo apt-get install cmake cmake-data doxygen doxygen-latex graphviz; fi
    - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then brew install doxygen graphviz; fi
    - export DOWNLOAD_ROOT="${TRAVIS_BUILD_DIR}/../download"; if [ ! -d "${DOWNLOAD_ROOT}" ]; then mkdir -p "${DOWNLOAD_ROOT}"; fi
    - export BOOST_DOWNLOAD_URL="http://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_1_58_0.tar.bz2/download"
    - export BOOST_ROOT="${TRAVIS_BUILD_DIR}/../boost"
    - export CMAKE_MODULE_PATH="${BOOST_ROOT}"
    - if [ ! -f "${DOWNLOAD_ROOT}/boost.tar.bz2" ]; then wget --no-verbose --output-document="${DOWNLOAD_ROOT}/boost.tar.bz2" "${BOOST_DOWNLOAD_URL}"; fi
    - if [ ! -d "${BOOST_ROOT}" ]; then mkdir -p "${BOOST_ROOT}" && tar jxf "${DOWNLOAD_ROOT}/boost.tar.bz2" --strip-components=1 -C "${BOOST_ROOT}"; fi
    - if [ ! -f "${BOOST_ROOT}/b2" ]; then cd "${BOOST_ROOT}"; ./bootstrap.sh --with-libraries=test; fi
    - cd "${BOOST_ROOT}"; ./b2 --prefix="$BOOST_ROOT" -d0 install
    - eval ${CC_ENV}
    - pyenv global system ${PYTHON_VERSION}
    - virtualenv --python=python${PYTHON_VERSION} vir_env
    - source vir_env/bin/activate
    - pip install Sphinx numpy breathe sphinx_rtd_theme

install:
    - cd "${TRAVIS_BUILD_DIR}"
    - mkdir build
    - cd build
    - cmake .. -DBUILD_TESTS=ON -DENABLE_DOC=ON 
    - make
    - make dev_doc

script:
    - ctest -V
