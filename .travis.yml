git:
    depth: 3

branches:
    only:
        - master
        - feat/test_CI

sudo: false

language: cpp

compiler: g++

addons:
    apt:
        sources: &common_sources
            - george-edison55-precise-backports
        packages: &common_deps
            - cmake-data
            - cmake
            - doxygen
            - doxygen-doc
            - doxygen-latex
            - doxygen-gui
            - graphviz

matrix:
     include:
         - os: linux
           env: 
               - BOOST_VERSION=1.58.0
               - PYTHON_VERSION=3.6
               - CC_ENV="CC=clang-3.5 && CXX=clang++-3.5 && CMAKE_CXX_STANDARD=14 && CXXFLAGS=libc++ && LDFLAGS=-stdlib=libc++"
               - CLANG_LIB="-DLLVM_ENABLE_LIBCXX=ON -DLLVM_ENABLE_LIBCXXABI=ON"
           addons:
               apt:
                   sources:
                       - *common_sources
                       - llvm-toolchain-trusty-3.5
                   packages:
                       - *common_deps
                       - clang-3.5
                       - libc++-dev
                       - libc++abi-dev

         - os: linux
           env: 
               - BOOST_VERSION=1.58.0
               - PYTHON_VERSION=3.6
               - CC_ENV="CC=clang-4.0 && CXX=clang++-4.0 && CMAKE_CXX_STANDARD=14 && CXXFLAGS=libc++ && LDFLAGS=-stdlib=libc++"
               - CLANG_LIB="-DLLVM_ENABLE_LIBCXX=ON -DLLVM_ENABLE_LIBCXXABI=ON"
           addons:
               apt:
                   sources:
                       - *common_sources
                       - llvm-toolchain-trusty-4.0
                   packages:
                       - *common_deps
                       - clang-4.0
                       - libc++-dev
                       - libc++abi-dev

         - os: linux
           env: 
               - BOOST_VERSION=1.58.0
               - PYTHON_VERSION=3.6
               - CC_ENV="CC=clang-5.0 && CXX=clang++-5.0 && CMAKE_CXX_STANDARD=14 && CXXFLAGS=libc++ && LDFLAGS=-stdlib=libc++"
               - CLANG_LIB="-DLLVM_ENABLE_LIBCXX=ON -DLLVM_ENABLE_LIBCXXABI=ON"
           addons:
               apt:
                   sources:
                       - *common_sources
                       - llvm-toolchain-trusty-5.0
                   packages:
                       - *common_deps
                       - clang-5.0
                       - libc++-dev
                       - libc++abi-dev

             # THESE WORKS JUST FINE
             #        - os: linux
             #          env: 
             #              - BOOST_VERSION=1.58.0
             #              - PYTHON_VERSION=3.6
             #              - CC_ENV="CC=gcc-5 && CXX=g++-5"
             #          addons:
             #              apt:
             #                  sources:
             #                      - *common_sources
             #                      - ubuntu-toolchain-r-test
             #                  packages:
             #                      - *common_deps   
             #                      - g++-5
             #
             #        - os: linux
             #          env: 
             #              - BOOST_VERSION=1.58.0
             #              - PYTHON_VERSION=3.6
             #              - CC_ENV="CC=gcc-6 && CXX=g++-6"
             #          addons:
             #              apt:
             #                  sources:
             #                      - *common_sources
             #                      - ubuntu-toolchain-r-test
             #                  packages:
             #                      - *common_deps   
             #                      - g++-6
             #
             #        - os: linux
             #          env: 
             #              - BOOST_VERSION=1.58.0
             #              - PYTHON_VERSION=3.6
             #              - CC_ENV="CC=gcc-7 && CXX=g++-7"
             #          addons:
             #              apt:
             #                  sources:
             #                      - *common_sources
             #                      - ubuntu-toolchain-r-test
             #                  packages:
             #                      - *common_deps   
             #                      - g++-7



before_install:
    - export DOWNLOAD_ROOT="${TRAVIS_BUILD_DIR}/../download"; if [ ! -d "${DOWNLOAD_ROOT}" ]; then mkdir -p "${DOWNLOAD_ROOT}"; fi
    - export BOOST_DOWNLOAD_URL="http://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_1_58_0.tar.bz2/download"
    - export BOOST_ROOT="${TRAVIS_BUILD_DIR}/../boost"
    - export CMAKE_MODULE_PATH="${BOOST_ROOT}"
    - if [ ! -f "${DOWNLOAD_ROOT}/boost.tar.bz2" ]; then wget --no-verbose --output-document="${DOWNLOAD_ROOT}/boost.tar.bz2" "${BOOST_DOWNLOAD_URL}"; fi
    - if [ ! -d "${BOOST_ROOT}" ]; then mkdir -p "${BOOST_ROOT}" && tar jxf "${DOWNLOAD_ROOT}/boost.tar.bz2" --strip-components=1 -C "${BOOST_ROOT}"; fi
    - if [ ! -f "${BOOST_ROOT}/b2" ]; then cd "${BOOST_ROOT}"; ./bootstrap.sh --with-libraries=test; fi
    - cd "${BOOST_ROOT}"; ./b2 --prefix="$BOOST_ROOT" -d0 install
    - eval ${CC_ENV}
    - pyenv global system ${PYTHON_VERSION}
    - virtualenv --python=python${PYTHON_VERSION} vir_env
    - source vir_env/bin/activate
    - pip install Sphinx numpy breathe sphinx_rtd_theme

install:
      - cd "${TRAVIS_BUILD_DIR}"
      - mkdir build
      - cd build
      - cmake .. -DBUILD_TESTS=ON -DENABLE_DOC=ON ${CLANG_LIB}
      - make
      - make dev_doc

script:
      - ctest -V
